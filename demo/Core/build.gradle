apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'maven'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    //解决library中BuildConfig.DEBUG始终为false的问题
    publishNonDefault true

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{
        abortOnError false
    }

}

allprojects {
    repositories {
        jcenter()
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
    provided files('libs/org.apache.http.legacy.jar')

    compile rootProject.ext.dependencies["appcompatv7"]
    compile rootProject.ext.dependencies["design"]
    //eventbus
    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    //butterknife
    compile "com.jakewharton:butterknife:8.4.0"
    annotationProcessor "com.jakewharton:butterknife-compiler:8.4.0"
    //retrofit+okhttp
    compile 'com.squareup.retrofit2:retrofit:latest.release'
    compile 'com.squareup.retrofit2:adapter-rxjava:latest.release'
    compile 'com.squareup.okhttp3:okhttp:latest.release'
    compile 'com.squareup.okhttp3:logging-interceptor:latest.release'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.jakewharton.rxbinding:rxbinding:0.2.0'
    //gson
    compile 'com.google.code.gson:gson:2.4'
    //纯色沉浸式标题栏
    compile 'spa.lyh.cn:immersion-sdk:1.0.6'
    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'
}

publish {
    userOrg = 'ddnosh'
    groupId = 'la.xiong.androidquick'
    artifactId = 'AndroidQuick'
    version = '1.0.5'
    description = 'AndroidQuick is a quick architecture to make an app.'
    website = "https://github.com/ddnosh/AndroidQuick"
}

tasks.withType(Javadoc) {//防止编码问题
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}